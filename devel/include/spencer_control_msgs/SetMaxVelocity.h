// Generated by gencpp from file spencer_control_msgs/SetMaxVelocity.msg
// DO NOT EDIT!


#ifndef SPENCER_CONTROL_MSGS_MESSAGE_SETMAXVELOCITY_H
#define SPENCER_CONTROL_MSGS_MESSAGE_SETMAXVELOCITY_H

#include <ros/service_traits.h>


#include <spencer_control_msgs/SetMaxVelocityRequest.h>
#include <spencer_control_msgs/SetMaxVelocityResponse.h>


namespace spencer_control_msgs
{

struct SetMaxVelocity
{

typedef SetMaxVelocityRequest Request;
typedef SetMaxVelocityResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetMaxVelocity
} // namespace spencer_control_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::spencer_control_msgs::SetMaxVelocity > {
  static const char* value()
  {
    return "1327cb85d6759dd1d5d69db85244469b";
  }

  static const char* value(const ::spencer_control_msgs::SetMaxVelocity&) { return value(); }
};

template<>
struct DataType< ::spencer_control_msgs::SetMaxVelocity > {
  static const char* value()
  {
    return "spencer_control_msgs/SetMaxVelocity";
  }

  static const char* value(const ::spencer_control_msgs::SetMaxVelocity&) { return value(); }
};


// service_traits::MD5Sum< ::spencer_control_msgs::SetMaxVelocityRequest> should match 
// service_traits::MD5Sum< ::spencer_control_msgs::SetMaxVelocity > 
template<>
struct MD5Sum< ::spencer_control_msgs::SetMaxVelocityRequest>
{
  static const char* value()
  {
    return MD5Sum< ::spencer_control_msgs::SetMaxVelocity >::value();
  }
  static const char* value(const ::spencer_control_msgs::SetMaxVelocityRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::spencer_control_msgs::SetMaxVelocityRequest> should match 
// service_traits::DataType< ::spencer_control_msgs::SetMaxVelocity > 
template<>
struct DataType< ::spencer_control_msgs::SetMaxVelocityRequest>
{
  static const char* value()
  {
    return DataType< ::spencer_control_msgs::SetMaxVelocity >::value();
  }
  static const char* value(const ::spencer_control_msgs::SetMaxVelocityRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::spencer_control_msgs::SetMaxVelocityResponse> should match 
// service_traits::MD5Sum< ::spencer_control_msgs::SetMaxVelocity > 
template<>
struct MD5Sum< ::spencer_control_msgs::SetMaxVelocityResponse>
{
  static const char* value()
  {
    return MD5Sum< ::spencer_control_msgs::SetMaxVelocity >::value();
  }
  static const char* value(const ::spencer_control_msgs::SetMaxVelocityResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::spencer_control_msgs::SetMaxVelocityResponse> should match 
// service_traits::DataType< ::spencer_control_msgs::SetMaxVelocity > 
template<>
struct DataType< ::spencer_control_msgs::SetMaxVelocityResponse>
{
  static const char* value()
  {
    return DataType< ::spencer_control_msgs::SetMaxVelocity >::value();
  }
  static const char* value(const ::spencer_control_msgs::SetMaxVelocityResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SPENCER_CONTROL_MSGS_MESSAGE_SETMAXVELOCITY_H
